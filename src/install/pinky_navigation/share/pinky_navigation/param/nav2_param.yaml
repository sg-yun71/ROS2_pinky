amcl:
  ros__parameters:
    use_sim_time: True  # 시뮬레이션 시간 사용
    set_initial_pose: true  # AMCL이 초기 위치를 수동으로 설정하도록 활성화
    initial_pose: [0.0, 0.0, 0.0, 0.0]  # 로봇의 초기 위치 (x, y, z, yaw)
    update_min_a: 0.1  # AMCL의 업데이트를 위한  최소 이동거리량
    update_min_d: 0.1  # AMCL의 업데이트를 위한  최소 회전거리량

amcl_map_client:
  ros__parameters:
    use_sim_time: True  # 시뮬레이션 시간 사용

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: True  # 시뮬레이션 시간 사용

bt_navigator:
  ros__parameters:
    use_sim_time: True  # 시뮬레이션 시간 사용
    odom_topic: "odom"  # 오도메트리 데이터가 게시되는 토픽 이름
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"  # 기본 Behavior Tree XML 파일 경로

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: True  # 시뮬레이션 시간 사용

controller_server:
  ros__parameters:
    use_sim_time: True  # 시뮬레이션 시간 사용
    failure_tolerance: 0.3  # 허용되는 컨트롤러 실패 시간 (초)
    progress_checker_plugin: "progress_checker"  # 진행 상황 확인 플러그인
    goal_checker_plugins: ["general_goal_checker"]  # 목표 확인 플러그인
    controller_plugins: ["FollowPath"]  # 사용할 컨트롤러 플러그인

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"  # 진행 상황 확인 플러그인 설정

    general_goal_checker:
      stateful: True  # 목표 확인에 상태를 유지할지 여부
      plugin: "nav2_controller::SimpleGoalChecker"  # 목표 확인 플러그인 설정

    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"  # 경로 추종 플러그인
      debug_trajectory_details: True  # 궤적 디버깅 정보 활성화
      max_vel_x: 0.22  # 최대 X 축 속도 (m/s)
      max_vel_theta: 1.0  # 최대 회전 속도 (rad/s)
      max_speed_xy: 0.22  # 최대 XY 병진 속도 (m/s)
      acc_lim_x: 2.5  # X 축 가속도 제한 (m/s^2)
      acc_lim_theta: 3.2  # 회전 가속도 제한 (rad/s^2)
      decel_lim_x: -2.5  # X 축 감속도 제한 (m/s^2)
      decel_lim_theta: -3.2  # 회전 감속도 제한 (rad/s^2)
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]  # 사용될 Critic 목록
      BaseObstacle.scale: 0.02  # 장애물 회피 Critic의 가중치
      PathAlign.forward_point_distance: 0.1  # 경로 정렬 Critic의 앞쪽 지점 거리
      GoalAlign.forward_point_distance: 0.1  # 목표 정렬 Critic의 앞쪽 지점 거리
      PathDist.scale: 32.0  # 경로 거리 Critic의 가중치
      GoalDist.scale: 24.0  # 목표 거리 Critic의 가중치
      RotateToGoal.scale: 32.0  # 목표 회전 Critic의 가중치
      RotateToGoal.slowing_factor: 5.0  # 회전 속도 감소 팩터
      RotateToGoal.lookahead_time: -1.0  # 목표 회전을 위한 예상 시간 (초)

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True  # 시뮬레이션 시간 사용

local_costmap:
  local_costmap:
    ros__parameters:
      global_frame: odom  # 로컬 코스트맵의 참조 프레임
      rolling_window: true  # 로봇 베이스 프레임과 함께 코스트맵 이동 여부
      resolution: 0.05  # 코스트맵의 해상도 (m/픽셀)
      plugins: ["obstacle_layer", "voxel_layer", "inflation_layer"]  # 활성화된 레이어 목록
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"  # 장애물 확장 레이어
        inflation_radius: 1.0  # 확장 반경 (m)
        cost_scaling_factor: 3.0  # 확장 반경 내 비용 증가 계수
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"  # 장애물 레이어
        observation_sources: scan  # 센서 데이터 소스
        scan:
          topic: /scan  # 레이저 스캔 데이터가 게시되는 토픽
          max_obstacle_height: 2.0  # 최대 장애물 높이 (m)
          clearing: True  # 점유 셀 클리어 활성화
          marking: True  # 장애물 표시 활성화
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"  # 3D 복셀 레이어
        publish_voxel_map: True  # 복셀 맵 디버그 출력 활성화
        z_voxels: 16  # 복셀 높이 레벨 수
        z_resolution: 0.05  # 복셀 높이 해상도 (m)
        observation_sources: scan  # 센서 데이터 소스
        scan:
          topic: /scan  # 레이저 스캔 데이터가 게시되는 토픽
          max_obstacle_height: 2.0  # 최대 장애물 높이 (m)
          clearing: True  # 점유 셀 클리어 활성화
          marking: True  # 장애물 표시 활성화
          raytrace_max_range: 3.0  # 최대 레이 트레이스 거리 (m)
          obstacle_max_range: 2.5  # 최대 장애물 감지 거리 (m)

global_costmap:
  global_costmap:
    ros__parameters:
      global_frame: map  # 글로벌 코스트맵의 참조 프레임
      track_unknown_space: true  # 알려지지 않은 공간을 추적할지 여부
      plugins: ["static_layer", "obstacle_layer", "voxel_layer", "inflation_layer"]  # 활성화된 레이어 목록
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"  # 장애물 레이어
        observation_sources: scan  # 센서 데이터 소스
        scan:
          topic: /scan  # 레이저 스캔 데이터가 게시되는 토픽
          max_obstacle_height: 2.0  # 최대 장애물 높이 (m)
          clearing: True  # 점유 셀 클리어 활성화
          marking: True  # 장애물 표시 활성화
          raytrace_max_range: 3.0  # 최대 레이 트레이스 거리 (m)
          obstacle_max_range: 2.5  # 최대 장애물 감지 거리 (m)
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"  # 3D 복셀 레이어
        publish_voxel_map: True  # 복셀 맵 디버그 출력 활성화
        z_voxels: 16  # 복셀 높이 레벨 수
        z_resolution: 0.05  # 복셀 높이 해상도 (m)
        observation_sources: scan  # 센서 데이터 소스
        scan:
          topic: /scan  # 레이저 스캔 데이터가 게시되는 토픽
          max_obstacle_height: 2.0  # 최대 장애물 높이 (m)
          clearing: True  # 점유 셀 클리어 활성화
          marking: True  # 장애물 표시 활성화
          raytrace_max_range: 3.0  # 최대 레이 트레이스 거리 (m)
          obstacle_max_range: 2.5  # 최대 장애물 감지 거리 (m)
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"  # 정적 맵 레이어
        map_subscribe_transient_local: True  # 맵 업데이트 구독 활성화
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"  # 장애물 확장 레이어
        cost_scaling_factor: 3.0  # 확장 반경 내 비용 증가 계수

map_server:
  ros__parameters:
    use_sim_time: True  # 시뮬레이션 시간 사용
    yaml_filename: "map.yaml"  # 로드할 맵 파일 경로

map_saver:
  ros__parameters:
    use_sim_time: True  # 시뮬레이션 시간 사용

planner_server:
  ros__parameters:
    use_sim_time: True  # 시뮬레이션 시간 사용
    planner_plugins: ["GridBased"]  # 활성화된 플래너 플러그인 목록
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"  # GridBased 플래너 플러그인

waypoint_follower:
  ros__parameters:
    loop_rate: 2000  # 경로 추종 확인 루프 속도 (Hz)
    stop_on_failure: false  # 경로점 실패 시 작업 중단 여부
    waypoint_task_executor_plugin: "wait_at_waypoint"  # 경로점 작업 실행 플러그인
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"  # 경로점에서 작업을 실행하는 플러그인
      enabled: True  # 플러그인 활성화 여부
      waypoint_pause_duration: 200  # 경로점에서 대기 시간 (ms)